"""This type stub file was generated by pyright.
"""

from collections.abc import Sequence
from typing import Any, Protocol, Self, TypeVar, runtime_checkable

ERROR = ...
SCHEDULED = ...
INTERRUPT = ...
RESUME = ...
TASKS = ...
Value = TypeVar("Value", covariant=True)
Update = TypeVar("Update", contravariant=True)
C = TypeVar("C")

class ChannelProtocol(Protocol[Value, Update, C]):
    @property
    def ValueType(self) -> Any: ...
    @property
    def UpdateType(self) -> Any: ...
    def checkpoint(self) -> C | None: ...
    def from_checkpoint(self, checkpoint: C | None) -> Self: ...
    def update(self, values: Sequence[Update]) -> bool: ...
    def get(self) -> Value: ...
    def consume(self) -> bool: ...

@runtime_checkable
class SendProtocol(Protocol):
    node: str
    arg: Any
    def __hash__(self) -> int: ...
    def __eq__(self, value: object) -> bool: ...
