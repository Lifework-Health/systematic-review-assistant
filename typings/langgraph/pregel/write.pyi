"""This type stub file was generated by pyright.
"""

from collections.abc import Callable, Sequence
from typing import Any, NamedTuple, TypeVar

from langchain_core.runnables import Runnable, RunnableConfig
from langchain_core.runnables.utils import ConfigurableFieldSpec
from langgraph.constants import Send
from langgraph.utils.runnable import RunnableCallable

type TYPE_SEND = Callable[[Sequence[tuple[str, Any]]], None]
R = TypeVar("R", bound=Runnable)
SKIP_WRITE = ...
PASSTHROUGH = ...

class ChannelWriteEntry(NamedTuple):
    channel: str
    value: Any = ...
    skip_none: bool = ...
    mapper: Callable | None = ...

class ChannelWriteTupleEntry(NamedTuple):
    mapper: Callable[[Any], Sequence[tuple[str, Any]] | None]
    value: Any = ...

class ChannelWrite(RunnableCallable):
    """Implements the logic for sending writes to CONFIG_KEY_SEND.
    Can be used as a runnable or as a static method to call imperatively.
    """

    writes: list[ChannelWriteEntry | ChannelWriteTupleEntry | Send]
    require_at_least_one_of: Sequence[str] | None
    def __init__(
        self,
        writes: Sequence[ChannelWriteEntry | ChannelWriteTupleEntry | Send],
        *,
        tags: Sequence[str] | None = ...,
        require_at_least_one_of: Sequence[str] | None = ...,
    ) -> None: ...
    def get_name(
        self, suffix: str | None = ..., *, name: str | None = ...
    ) -> str: ...
    @property
    def config_specs(self) -> list[ConfigurableFieldSpec]: ...
    @staticmethod
    def do_write(
        config: RunnableConfig,
        writes: Sequence[ChannelWriteEntry | ChannelWriteTupleEntry | Send],
        require_at_least_one_of: Sequence[str] | None = ...,
    ) -> None: ...
    @staticmethod
    def is_writer(runnable: Runnable) -> bool:
        """Used by PregelNode to distinguish between writers and other runnables."""

    @staticmethod
    def register_writer(runnable: R) -> R:
        """Used to mark a runnable as a writer, so that it can be detected by is_writer.
        Instances of ChannelWrite are automatically marked as writers.
        """
