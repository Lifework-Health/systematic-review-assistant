"""This type stub file was generated by pyright.
"""

from collections.abc import AsyncIterator, Callable, Iterator
from contextlib import asynccontextmanager, contextmanager
from typing import (
    Any,
    AsyncContextManager,
    ContextManager,
    Generic,
    Self,
)

from langgraph.managed.base import ConfiguredManagedValue, ManagedValue, V
from langgraph.types import LoopProtocol

class Context(ManagedValue[V], Generic[V]):
    runtime = ...
    value: V
    @staticmethod
    def of(
        ctx: type[ContextManager[V] | AsyncContextManager[V]] | None | Callable[..., ContextManager[V]] | Callable[..., AsyncContextManager[V]] = ...,
        actx: Callable[..., AsyncContextManager[V]] | type[AsyncContextManager[V]] | None = ...,
    ) -> ConfiguredManagedValue: ...
    @classmethod
    @contextmanager
    def enter(cls, loop: LoopProtocol, **kwargs: Any) -> Iterator[Self]: ...
    @classmethod
    @asynccontextmanager
    async def aenter(cls, loop: LoopProtocol, **kwargs: Any) -> AsyncIterator[Self]: ...
    def __init__(
        self,
        loop: LoopProtocol,
        *,
        ctx: type[ContextManager[V] | AsyncContextManager[V]] | None = ...,
        actx: type[AsyncContextManager[V]] | None = ...,
    ) -> None: ...
    def __call__(self) -> V: ...
