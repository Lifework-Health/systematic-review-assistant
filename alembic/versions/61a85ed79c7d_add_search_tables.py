"""add search tables

Revision ID: 61a85ed79c7d
Revises: 254fe6c3d36d
Create Date: 2025-01-22 12:19:29.584379+00:00

"""

from __future__ import annotations

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "61a85ed79c7d"
down_revision: str | None = "254fe6c3d36d"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "reviews",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("timezone('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("timezone('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("background", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("question", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "inclusion_criteria", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "exclusion_criteria", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "pubmed_searches",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("timezone('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("timezone('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("review_id", sa.Uuid(), nullable=False),
        sa.Column("query", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("total_results", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["review_id"],
            ["reviews.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_pubmed_searches_review_id"),
        "pubmed_searches",
        ["review_id"],
        unique=False,
    )
    op.create_table(
        "pubmed_results",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("timezone('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("timezone('utc', CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("search_id", sa.Uuid(), nullable=False),
        sa.Column("pmid", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("abstract", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("journal", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("year", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["search_id"],
            ["pubmed_searches.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_pubmed_results_pmid"), "pubmed_results", ["pmid"], unique=False
    )
    op.create_index(
        op.f("ix_pubmed_results_search_id"),
        "pubmed_results",
        ["search_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_pubmed_results_search_id"), table_name="pubmed_results")
    op.drop_index(op.f("ix_pubmed_results_pmid"), table_name="pubmed_results")
    op.drop_table("pubmed_results")
    op.drop_index(op.f("ix_pubmed_searches_review_id"), table_name="pubmed_searches")
    op.drop_table("pubmed_searches")
    op.drop_table("reviews")
    # ### end Alembic commands ###
