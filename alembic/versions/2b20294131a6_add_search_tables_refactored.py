"""add search tables refactored

Revision ID: 2b20294131a6
Revises: 61a85ed79c7d
Create Date: 2025-01-23 04:32:02.867322+00:00

"""
from __future__ import annotations

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "2b20294131a6"
down_revision: str | None = "61a85ed79c7d"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # Drop the foreign key first
    op.drop_constraint(
        "pubmed_results_search_id_fkey", "pubmed_results", type_="foreignkey"
    )

    # Now safe to drop the table and its index
    op.drop_index("ix_pubmed_searches_review_id", table_name="pubmed_searches")
    op.drop_table("pubmed_searches")

    # Add new columns
    op.add_column("pubmed_results", sa.Column("review_id", sa.Uuid(), nullable=False))
    op.add_column("pubmed_results", sa.Column("query", sa.String(), nullable=False))

    # Create new index and foreign key
    op.drop_index("ix_pubmed_results_search_id", table_name="pubmed_results")
    op.create_index(
        op.f("ix_pubmed_results_review_id"),
        "pubmed_results",
        ["review_id"],
        unique=False,
    )
    op.create_foreign_key(None, "pubmed_results", "reviews", ["review_id"], ["id"])
    op.drop_column("pubmed_results", "search_id")


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "pubmed_results",
        sa.Column("search_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "pubmed_results", type_="foreignkey")
    op.create_foreign_key(
        "pubmed_results_search_id_fkey",
        "pubmed_results",
        "pubmed_searches",
        ["search_id"],
        ["id"],
    )
    op.drop_index(op.f("ix_pubmed_results_review_id"), table_name="pubmed_results")
    op.create_index(
        "ix_pubmed_results_search_id", "pubmed_results", ["search_id"], unique=False
    )
    op.drop_column("pubmed_results", "query")
    op.drop_column("pubmed_results", "review_id")
    op.create_table(
        "pubmed_searches",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("review_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("query", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("total_results", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["review_id"], ["reviews.id"], name="pubmed_searches_review_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="pubmed_searches_pkey"),
    )
    op.create_index(
        "ix_pubmed_searches_review_id", "pubmed_searches", ["review_id"], unique=False
    )
    # ### end Alembic commands ###
