"""check_schema_sync_after_refactor

Revision ID: d122fe7364e6
Revises: 3c121a82c373
Create Date: 2025-04-08 18:35:16.599088+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'd122fe7364e6'
down_revision: Union[str, None] = '3c121a82c373'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_screening_resolutions_comprehensive_result_id', table_name='screening_resolutions')
    op.drop_index('ix_screening_resolutions_conservative_result_id', table_name='screening_resolutions')
    op.drop_constraint('screening_resolutions_comprehensive_result_id_fkey', 'screening_resolutions', type_='foreignkey')
    op.drop_constraint('screening_resolutions_conservative_result_id_fkey', 'screening_resolutions', type_='foreignkey')
    op.drop_column('screening_resolutions', 'conservative_result_id')
    op.drop_column('screening_resolutions', 'comprehensive_result_id')
    op.add_column('search_results', sa.Column('conservative_result_id', sa.Uuid(), nullable=True))
    op.add_column('search_results', sa.Column('comprehensive_result_id', sa.Uuid(), nullable=True))
    op.create_index(op.f('ix_search_results_comprehensive_result_id'), 'search_results', ['comprehensive_result_id'], unique=False)
    op.create_index(op.f('ix_search_results_conservative_result_id'), 'search_results', ['conservative_result_id'], unique=False)
    op.create_index(op.f('ix_search_results_keywords'), 'search_results', ['keywords'], unique=False)
    op.create_index(op.f('ix_search_results_year'), 'search_results', ['year'], unique=False)
    op.create_foreign_key(None, 'search_results', 'screen_abstract_results', ['conservative_result_id'], ['id'])
    op.create_foreign_key(None, 'search_results', 'screen_abstract_results', ['comprehensive_result_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'search_results', type_='foreignkey')
    op.drop_constraint(None, 'search_results', type_='foreignkey')
    op.drop_index(op.f('ix_search_results_year'), table_name='search_results')
    op.drop_index(op.f('ix_search_results_keywords'), table_name='search_results')
    op.drop_index(op.f('ix_search_results_conservative_result_id'), table_name='search_results')
    op.drop_index(op.f('ix_search_results_comprehensive_result_id'), table_name='search_results')
    op.drop_column('search_results', 'comprehensive_result_id')
    op.drop_column('search_results', 'conservative_result_id')
    op.add_column('screening_resolutions', sa.Column('comprehensive_result_id', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('screening_resolutions', sa.Column('conservative_result_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('screening_resolutions_conservative_result_id_fkey', 'screening_resolutions', 'screen_abstract_results', ['conservative_result_id'], ['id'])
    op.create_foreign_key('screening_resolutions_comprehensive_result_id_fkey', 'screening_resolutions', 'screen_abstract_results', ['comprehensive_result_id'], ['id'])
    op.create_index('ix_screening_resolutions_conservative_result_id', 'screening_resolutions', ['conservative_result_id'], unique=False)
    op.create_index('ix_screening_resolutions_comprehensive_result_id', 'screening_resolutions', ['comprehensive_result_id'], unique=False)
    # ### end Alembic commands ###
